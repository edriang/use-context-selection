{"version":3,"sources":["../../src/isShallowEqual.ts","../../src/globals.ts","../../src/useContextSelection.ts","../../node_modules/tslib/tslib.es6.js","../../src/createContext.ts","context.js","../../src/createContextConsumer.ts","components/Row.js","components/RowWithRegularContext.jsx","components/RowWithImprovedContext.jsx","App.js","serviceWorker.js","index.js"],"names":["hasOwn","hasOwnProperty","isEqualShallow","a","b","akeys","Object","keys","bkeys","length","n","k","call","contextConsumerTypeSymbol","Symbol","contextListeners","Map","useContextSelection","Context","selection","contextValue","useContext","o","m","iterator","r","e","i","ar","next","done","push","value","error","currentSelection","forceUpdate","listener","useRef","useEffect","get","add","current","delete","createContextDispatcher","listeners","equalityFn","oldValue","newValue","s","TypeError","newResult","createContextProvider","children","numOfRows","React","useReducer","state","type","payload","rows","slice","index","Array","fill","map","Date","now","dispatch","setRowValue","Provider","RegularContext","createContext","RegularProvider","ImprovedContext","initValue","Set","set","Consumer","ContextSelectionConsumer","$$type","createContextConsumer","ImprovedProvider","Component","setValue","name","style","whiteSpace","moment","format","className","onClick","RowWithRegularContext","memo","useCallback","Row","RowWithImprovedContext","store","rowValue","simulateClicks","tableClassName","setButtonsDisabled","buttons","document","querySelectorAll","startTime","clickNextButton","onFinish","alert","click","window","requestAnimationFrame","App","useState","setNumOfRows","buttonsDisabled","onChange","parseInt","target","disabled","_","key","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.4ce6a05e.chunk.js","sourcesContent":["const hasOwn = {}.hasOwnProperty;\n\nfunction isEqualShallow(a: any, b: any): boolean {\n  if (a === b) return true;\n  if (!a || !b) return false;\n\n  const akeys = Object.keys(a);\n  const bkeys = Object.keys(b);\n\n  if (akeys.length !== bkeys.length) return false;\n\n  let n = akeys.length;\n\n  while (n--) {\n    const k = akeys[n];\n\n    if (!hasOwn.call(b, k) || a[k] !== b[k]) {\n      if (typeof a[k] === 'function' && typeof b[k] === 'function') {\n        continue;\n      }\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default isEqualShallow;\n","const contextConsumerTypeSymbol = Symbol('ContextSelectionConsumer');\n\nconst contextListeners = new Map<React.Context<any>, Set<ContextListener<any>>>();\n\nexport { contextListeners, contextConsumerTypeSymbol };\n","import React from 'react';\n\nimport { contextListeners, contextConsumerTypeSymbol } from './globals';\n\nfunction useContextSelection<T = any>(Context: React.Context<T>, selection: Selector<T>): Partial<T> {\n  if (process.env.NODE_ENV !== 'production') {\n    // @ts-ignore\n    if (Context.Consumer.$$type !== contextConsumerTypeSymbol) {\n      throw new Error(\n        `You need to provide a 'Context' instance created with 'createContext()' function from 'use-context-selection' library.`\n      );\n    }\n  }\n\n  const contextValue = React.useContext(Context);\n  const [currentSelection, forceUpdate] = React.useState<any>(selection(contextValue));\n  const listener = React.useRef({ selection, forceUpdate });\n\n  React.useEffect(() => {\n    const listeners = contextListeners.get(Context)!;\n\n    listeners.add(listener.current);\n\n    return () => {\n      const listeners = contextListeners.get(Context)!;\n\n      listeners.delete(listener.current);\n    };\n  }, []);\n\n  return currentSelection;\n}\n\nexport default useContextSelection;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import React from 'react';\n\nimport isEqualShallow from './isShallowEqual';\nimport createContextConsumer from './createContextConsumer';\nimport { contextListeners } from './globals';\n\nfunction createContextDispatcher<T>(\n  listeners: Set<ContextListener<T>>,\n  equalityFn: EqualityFn<T> = isEqualShallow\n): ContextComparator<T> {\n  return (oldValue: T, newValue: T): 0 => {\n    for (const listener of listeners) {\n      const newResult = listener.selection(newValue);\n\n      if (!equalityFn(newResult, listener.selection(oldValue))) {\n        listener.forceUpdate(newResult);\n      }\n    }\n\n    return 0;\n  };\n}\n\nfunction createContext<T>(initValue: T, equalityFn?: EqualityFn<T>): CustomContext<T> {\n  const listeners = new Set<ContextListener<T>>();\n\n  // @ts-ignore\n  const Context = React.createContext<T>(initValue, createContextDispatcher<T>(listeners, equalityFn));\n\n  contextListeners.set(Context, listeners);\n\n  // @ts-ignore\n  Context.Consumer = createContextConsumer(Context);\n\n  return Context as CustomContext<T>;\n}\n\nexport default createContext;\nexport { createContextDispatcher };\n","import React from 'react';\nimport { createContext, useContextSelection } from 'use-context-selection';\n\nfunction createContextProvider(Context) {\n    return ({ children, numOfRows}) => {\n\n        const [state, dispatch] = React.useReducer((state, { type, payload = {} }) => {\n            switch (type) {\n                case 'INCREMENT':\n                    const rows = state.rows.slice(0);\n\n                    rows[payload.index] = payload.value;\n\n                    return { ...state, rows };\n\n                case 'SET_ROW_NUMBER':\n                    return {\n                        ...state,\n                        rows: new Array(payload.numOfRows).fill(0).map(() => Date.now()),\n                    };\n                default:\n                    return state;\n            }\n        }, { rows: [] })\n\n        const setRowValue = (index, value) => {\n            dispatch({\n                type: 'INCREMENT',\n                payload: { index, value },\n            })\n        };\n\n        React.useEffect(() => {\n            dispatch({ type: 'SET_ROW_NUMBER', payload: { numOfRows }})\n        }, [numOfRows]);\n    \n        const value = {\n            rows: state.rows,\n            setRowValue,\n        };\n    \n        return <Context.Provider value={value}>{children}</Context.Provider>\n    };\n}\n\nconst RegularContext = React.createContext({});\nconst RegularProvider = createContextProvider(RegularContext);\nconst useRegularContext = () => React.useContext(RegularContext);\n\n\nconst ImprovedContext = createContext({});\nconst ImprovedProvider = createContextProvider(ImprovedContext);\nconst useImprovedContext = (getterFn) => useContextSelection(ImprovedContext, getterFn);\n\nexport {\n    RegularProvider,\n    useRegularContext,\n\n    ImprovedContext,\n    ImprovedProvider,\n    useImprovedContext,\n};\n","import { contextConsumerTypeSymbol } from './globals';\nimport useContextSelection from './useContextSelection';\n\nfunction createContextConsumer<T>(Context: React.Context<T>): ContextConsumer<T> {\n  const ContextSelectionConsumer: ContextConsumer<T> = ({ children, selection = (store: any) => store }: any) => {\n    const contextValue = useContextSelection(Context, selection);\n\n    return children(contextValue);\n  };\n\n  ContextSelectionConsumer.$$type = contextConsumerTypeSymbol;\n\n  return ContextSelectionConsumer;\n}\n\nexport default createContextConsumer;\n","import React from 'react';\nimport moment from 'moment';\n\nconst Component = ({ value, setValue, name }) => {\n    const updateValue = () => {\n        setValue(Date.now());\n    }\n\n    return (\n        <tr>\n            <td>\n                <strong style={{whiteSpace: 'nowrap'}}>{name}</strong>\n            </td>\n            <td>\n                <strong>Rendered:</strong>\n                <p>{moment().format('hh:mm:ss.SSS')}</p>\n            </td>\n            <td>\n                <strong>Updated:</strong>\n                <p>{moment(value).format('hh:mm:ss.SSS')}</p>\n            </td>\n            <td>\n                <button style={{whiteSpace: 'nowrap'}} className={`btn btn-primary btn-sm`} onClick={updateValue}>Update value</button>\n            </td>\n        </tr>\n        \n    )\n}\n\nexport default Component;\n","import React from 'react';\n\nimport Row from './Row';\nimport { useRegularContext } from '../context';\n\nconst RowWithRegularContext = React.memo(({ name, index }) => {\n    const { rows, setRowValue } = useRegularContext();\n\n    const setValue = React.useCallback((value) => setRowValue(index, value), [index]);\n\n    return <Row value={rows[index]} setValue={setValue} name={name} />\n});\n\nexport default RowWithRegularContext;\n","import React from 'react';\n\nimport Row from './Row';\nimport { useImprovedContext } from '../context';\n\nconst RowWithImprovedContext = React.memo(({ name, index }) => {\n    const { rowValue, setRowValue } = useImprovedContext(store => {\n        // console.log('useImprovedContext', { store });\n        return {\n            rowValue: store.rows[index],\n            setRowValue: store.setRowValue,\n        };    \n    });\n    const setValue = React.useCallback((value) => setRowValue(index, value), [index]);\n\n    return <Row value={rowValue} setValue={setValue} name={name} />\n});\n\nexport default RowWithImprovedContext;\n","import React from 'react';\n\nimport './App.css';\n\nimport { RegularProvider, ImprovedProvider, ImprovedContext } from './context';\n\nimport RowWithRegularContext from './components/RowWithRegularContext';\nimport RowWithImprovedContext from './components/RowWithImprovedContext';\n\nconst NUM_ROWS = 300;\n\nfunction simulateClicks(tableClassName, setButtonsDisabled) {\n  const buttons = document.querySelectorAll(`.table.${tableClassName} .btn`);\n  const startTime = Date.now();\n\n  setButtonsDisabled(true);\n\n  clickNextButton(buttons, 0, startTime, () => setButtonsDisabled(false));\n}\n\nfunction clickNextButton(buttons, index, startTime, onFinish) {\n  if (index === buttons.length) {\n    onFinish();\n    alert(`Render finished: ${Date.now() - startTime}ms`)\n    return;\n  }\n  buttons[index].click();\n\n  window.requestAnimationFrame(() => {\n    clickNextButton(buttons, index + 1, startTime, onFinish);\n  });\n}\n\nfunction App() {\n  const [numOfRows, setNumOfRows] = React.useState(NUM_ROWS);\n  const [buttonsDisabled, setButtonsDisabled] = React.useState(false);\n\n  return (\n    <div className={`App container container-xl ${buttonsDisabled ? 'buttons-disabled' : ''}`}>\n      <div className=\"pb-5\">\n        <h1>Performance comparison</h1>\n        <p>Enter the number of rows you want to render</p>\n\n        <div>\n          <input type=\"number\" className=\"form-control input-number\" value={numOfRows} onChange={(e) => setNumOfRows(parseInt(e.target.value || 0))} />\n        </div>\n\n        <p>On the left side, each value is read directly from Context. On the right side, values are read from Context using use-context-selection.</p>\n        <p>For each row we render we are displaying the rendered time and a the last time that cell was updated.</p>\n        <p>When you click a button its updated-time value is updated and a re-render is triggered. Note that for regular Context that means re-rendering all the rows even though its cell-value didn't change.</p>\n        <p>With use-context-selection you can retrieve chunks from your Context and your components will update only when that value is updated, which improves the performance significantly.</p>\n        <br />\n        <p className=\"alert alert-info\">\n          The \"Simulate Click All\" button will \"click\", one by one, on every row-button.\n          <br />\n          After clicking on every button an alert message will be displayed showing the amount of time it took to render every row.\n          <br />\n          <strong>To experience a real difference in performance enter more than 150 rows; on the left example the time complexity increases exponentially, while on the right example it increases linearly.</strong>\n        </p>\n      </div>\n      <div className=\"row\">\n        <div className=\"col col-6\">\n          <h2>\n            Regular Context\n            <button disabled={buttonsDisabled} className=\"btn btn-success btn-sm float-right\" onClick={() => simulateClicks('context', setButtonsDisabled)}>{ buttonsDisabled ? 'Processing...' : 'Simulate Click All' }</button>\n          </h2>\n          <RegularProvider numOfRows={numOfRows}>\n            <table className=\"table context\">\n              <tbody>\n                  {(new Array(numOfRows).fill(0).map((_, index) => (\n                    <RowWithRegularContext key={`row-${index}`} name={`Row ${index + 1}A`} index={index} />\n                  )))}\n              </tbody>\n            </table>\n          </RegularProvider>\n        </div>\n        <div className=\"col col-6\">\n          <h2>\n            useContextSelection\n            <button disabled={buttonsDisabled} className=\"btn btn-success btn-sm float-right\" onClick={() => simulateClicks('use-context-selection', setButtonsDisabled)}>{ buttonsDisabled ? 'Processing...' : 'Simulate Click All' }</button>\n          </h2>\n          <ImprovedProvider numOfRows={numOfRows}>\n            {/* <ImprovedContext.Consumer selection={state => ({ length: state.rows.length })}>\n              {({ length }) => String(length)}\n            </ImprovedContext.Consumer> */}\n            <table className=\"table use-context-selection\">\n                <tbody>\n                  {(new Array(numOfRows).fill(0).map((_, index) => (\n                    <RowWithImprovedContext key={`row-${index}`} name={`Row ${index + 1}B`} index={index} />\n                  )))}\n                </tbody>\n            </table>\n          </ImprovedProvider>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}